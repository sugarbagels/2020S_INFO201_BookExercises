# Divide each number by the square root of 201 and save the new value in the
# original variable
# Create a variable `raw_sum` that is the sum of the two variables. Use the
# `sum()` function for practice.
# Create a variable `round_sum` that is the `raw_sum` rounded to 1 decimal place.
# Use the `round()` function.
# Create two new variables `round_1` and `round_2` that are your `fav_1` and
# `fav_2` variables rounded to 1 decimal places
# Create a variable `sum_round` that is the sum of the rounded values
# Which is bigger, `round_sum` or `sum_round`? (You can use the `max()` function!)
name_length <- nchar(my_name)
name_length <- nchar(My_name)
# Exercise 1: calling built-in functions
# Create a variable `my_name` that contains your name
my_name <- "ana"
# Create a variable `name_length` that holds how many letters (including spaces)
# are in your name (use the `nchar()` function)
name_length <- nchar(my_name)
# Print the number of letters in your name
# Create a variable `now_doing` that is your name followed by "is programming!"
# (use the `paste()` function)
# Make the `now_doing` variable upper case
### Bonus
# Pick two of your favorite numbers (between 1 and 100) and assign them to
# variables `fav_1` and `fav_2`
# Divide each number by the square root of 201 and save the new value in the
# original variable
# Create a variable `raw_sum` that is the sum of the two variables. Use the
# `sum()` function for practice.
# Create a variable `round_sum` that is the `raw_sum` rounded to 1 decimal place.
# Use the `round()` function.
# Create two new variables `round_1` and `round_2` that are your `fav_1` and
# `fav_2` variables rounded to 1 decimal places
# Create a variable `sum_round` that is the sum of the rounded values
# Which is bigger, `round_sum` or `sum_round`? (You can use the `max()` function!)
# Exercise 1: practice with basic R syntax
# Create a variable `hometown` that stores the city in which you were born
hometown <- "bogota"
# Assign your name to the variable `my_name`
my_name <- "Ana"
# Assign your height (in inches) to a variable `my_height`
my_height <- 61
# Create a variable `puppies` equal to the number of puppies you'd like to have
puppies <- 1
# Create a variable `puppy_price`, which is how much you think a puppy costs
puppy_price <- 500
# Create a variable `total_cost` that has the total cost of all of your puppies
total_cost <- puppies * puppy_price
# Create a boolean variable `too_expensive`, set to TRUE if the cost is greater
# than $1,000
IS_too_expensive <- total_cost > 1000
# Create a variable `max_puppies`, which is the number of puppies you can
# afford for $1,000
max_puppies <- 1000/puppy_price
# Exercise 1: calling built-in functions
# Create a variable `my_name` that contains your name
my_name <- "ana"
# Create a variable `name_length` that holds how many letters (including spaces)
# are in your name (use the `nchar()` function)
name_length <- nchar(my_name)
# Print the number of letters in your name
# Create a variable `now_doing` that is your name followed by "is programming!"
# (use the `paste()` faunction)
# Make the `now_doing` variable upper case
### Bonus
# Pick two of your favorite numbers (between 1 and 100) and assign them to
# variables `fav_1` and `fav_2`
# Divide each number by the square root of 201 and save the new value in the
# original variable
# Create a variable `raw_sum` that is the sum of the two variables. Use the
# `sum()` function for practice.
# Create a variable `round_sum` that is the `raw_sum` rounded to 1 decimal place.
# Use the `round()` function.
# Create two new variables `round_1` and `round_2` that are your `fav_1` and
# `fav_2` variables rounded to 1 decimal places
# Create a variable `sum_round` that is the sum of the rounded values
# Which is bigger, `round_sum` or `sum_round`? (You can use the `max()` function!)
print(name_length)
now_doing <- paste(my_name,"isprogramming")
now_doing <- paste(my_name,"is programming")
now_doing <- paste(my_name ,"is programming")
now_doing <- paste(my_name,"is programming")
toupper(now_doing)
# Exercise 1: calling built-in functions
# Create a variable `my_name` that contains your name
my_name <- "ana"
# Create a variable `name_length` that holds how many letters (including spaces)
# are in your name (use the `nchar()` function)
name_length <- nchar(my_name)
# Print the number of letters in your name
print(name_length)
# Create a variable `now_doing` that is your name followed by "is programming!"
# (use the `paste()` faunction)
now_doing <- paste(my_name,"is programming")
# Make the `now_doing` variable upper case
toupper(now_doing)
### Bonus
# Pick two of your favorite numbers (between 1 and 100) and assign them to
# variables `fav_1` and `fav_2`
fav_1 <- 69
fave_2 <- 23
# Divide each number by the square root of 201 and save the new value in the
# original variable
# Create a variable `raw_sum` that is the sum of the two variables. Use the
# `sum()` function for practice.
# Create a variable `round_sum` that is the `raw_sum` rounded to 1 decimal place.
# Use the `round()` function.
# Create two new variables `round_1` and `round_2` that are your `fav_1` and
# `fav_2` variables rounded to 1 decimal places
# Create a variable `sum_round` that is the sum of the rounded values
# Which is bigger, `round_sum` or `sum_round`? (You can use the `max()` function!)
fave_1 <- fave_1 / sqrt(201)(
fave_1 <- fave_1 / sqrt(201)
fave_1 <- (fave_1 / sqrt(201))
fave_1 <- (fave_1) / sqrt(201))
fave_1 <- fave_1) / sqrt(201)
fave_1 = fave_1) / sqrt(201)
fave_1 = fave_1 / sqrt(201)
# Create a variable `raw_sum` that is the sum of the two variables. Use the
fav_1 = fav_1 / sqrt(201)
fav_1 < fav_1 / sqrt(201)
fav_2 <- fav_2 / sqrt(201)
fav_1 < fav_1 / sqrt(201)
fav_2 <- fav_2 / sqrt(201)
fav_1 < fav_1 / sqrt(201)
fav_2 <- fav_2 / sqrt(201)
fav_1 < fav_1 / sqrt(201)
fav_2 <- fav_2 / sqrt(201)
# Exercise 1: calling built-in functions
# Create a variable `my_name` that contains your name
my_name <- "ana"
# Create a variable `name_length` that holds how many letters (including spaces)
# are in your name (use the `nchar()` function)
name_length <- nchar(my_name)
# Print the number of letters in your name
print(name_length)
# Create a variable `now_doing` that is your name followed by "is programming!"
# (use the `paste()` faunction)
now_doing <- paste(my_name,"is programming")
# Make the `now_doing` variable upper case
toupper(now_doing)
### Bonus
# Pick two of your favorite numbers (between 1 and 100) and assign them to
# variables `fav_1` and `fav_2`
fav_1 <- 69
fav_2 <- 23
# Divide each number by the square root of 201 and save the new value in the
# original variable
fav_1 < fav_1 / sqrt(201)
fav_2 <- fav_2 / sqrt(201)
# Create a variable `raw_sum` that is the sum of the two variables. Use the
# `sum()` function for practice.
# Create a variable `round_sum` that is the `raw_sum` rounded to 1 decimal place.
# Use the `round()` function.
# Create two new variables `round_1` and `round_2` that are your `fav_1` and
# `fav_2` variables rounded to 1 decimal places
# Create a variable `sum_round` that is the sum of the rounded values
# Which is bigger, `round_sum` or `sum_round`? (You can use the `max()` function!)
# Exercise 1: calling built-in functions
# Create a variable `my_name` that contains your name
my_name <- "ana"
# Create a variable `name_length` that holds how many letters (including spaces)
# are in your name (use the `nchar()` function)
name_length <- nchar(my_name)
# Print the number of letters in your name
print(name_length)
# Create a variable `now_doing` that is your name followed by "is programming!"
# (use the `paste()` faunction)
now_doing <- paste(my_name,"is programming")
# Make the `now_doing` variable upper case
toupper(now_doing)
### Bonus
# Pick two of your favorite numbers (between 1 and 100) and assign them to
# variables `fav_1` and `fav_2`
fav_1 <- 69
fav_2 <- 23
# Divide each number by the square root of 201 and save the new value in the
# original variable
fav_1 < fav_1 / sqrt(201)
fav_2 <- fav_2 / sqrt(201)
# Create a variable `raw_sum` that is the sum of the two variables. Use the
# `sum()` function for practice.
# Create a variable `round_sum` that is the `raw_sum` rounded to 1 decimal place.
# Use the `round()` function.
# Create two new variables `round_1` and `round_2` that are your `fav_1` and
# `fav_2` variables rounded to 1 decimal places
# Create a variable `sum_round` that is the sum of the rounded values
# Which is bigger, `round_sum` or `sum_round`? (You can use the `max()` function!)
# Exercise 1: calling built-in functions
# Create a variable `my_name` that contains your name
my_name <- "ana"
# Create a variable `name_length` that holds how many letters (including spaces)
# are in your name (use the `nchar()` function)
name_length <- nchar(my_name)
# Print the number of letters in your name
print(name_length)
# Create a variable `now_doing` that is your name followed by "is programming!"
# (use the `paste()` faunction)
now_doing <- paste(my_name,"is programming")
# Make the `now_doing` variable upper case
toupper(now_doing)
### Bonus
# Pick two of your favorite numbers (between 1 and 100) and assign them to
# variables `fav_1` and `fav_2`
fav_1 <- 69
fav_2 <- 23
# Divide each number by the square root of 201 and save the new value in the
# original variable
fav_1 < fav_1 / sqrt(201)
fav_2 <- fav_2 / sqrt(201)
# Create a variable `raw_sum` that is the sum of the two variables. Use the
# `sum()` function for practice.
# Create a variable `round_sum` that is the `raw_sum` rounded to 1 decimal place.
# Use the `round()` function.
# Create two new variables `round_1` and `round_2` that are your `fav_1` and
# `fav_2` variables rounded to 1 decimal places
# Create a variable `sum_round` that is the sum of the rounded values
# Which is bigger, `round_sum` or `sum_round`? (You can use the `max()` function!)
# Exercise 1: calling built-in functions
# Create a variable `my_name` that contains your name
my_name <- "ana"
# Create a variable `name_length` that holds how many letters (including spaces)
# are in your name (use the `nchar()` function)
name_length <- nchar(my_name)
# Print the number of letters in your name
print(name_length)
# Create a variable `now_doing` that is your name followed by "is programming!"
# (use the `paste()` faunction)
now_doing <- paste(my_name,"is programming")
# Make the `now_doing` variable upper case
toupper(now_doing)
### Bonus
# Pick two of your favorite numbers (between 1 and 100) and assign them to
# variables `fav_1` and `fav_2`
fav_1 <- 69
fav_2 <- 23
# Divide each number by the square root of 201 and save the new value in the
# original variable
fav_1 < fav_1 / sqrt(201)
fav_2 <- fav_2 / sqrt(201)
# Create a variable `raw_sum` that is the sum of the two variables. Use the
# `sum()` function for practice.
# Create a variable `round_sum` that is the `raw_sum` rounded to 1 decimal place.
# Use the `round()` function.
# Create two new variables `round_1` and `round_2` that are your `fav_1` and
# `fav_2` variables rounded to 1 decimal places
# Create a variable `sum_round` that is the sum of the rounded values
# Which is bigger, `round_sum` or `sum_round`? (You can use the `max()` function!)
# Exercise 1: calling built-in functions
# Create a variable `my_name` that contains your name
my_name <- "ana"
# Create a variable `name_length` that holds how many letters (including spaces)
# are in your name (use the `nchar()` function)
name_length <- nchar(my_name)
# Print the number of letters in your name
print(name_length)
# Create a variable `now_doing` that is your name followed by "is programming!"
# (use the `paste()` faunction)
now_doing <- paste(my_name,"is programming")
# Make the `now_doing` variable upper case
toupper(now_doing)
### Bonus
# Pick two of your favorite numbers (between 1 and 100) and assign them to
# variables `fav_1` and `fav_2`
fav_1 <- 69
fav_2 <- 23
# Divide each number by the square root of 201 and save the new value in the
# original variable
fav_1 < fav_1 / sqrt(201)
fav_2 <- fav_2 / sqrt(201)
# Create a variable `raw_sum` that is the sum of the two variables. Use the
# `sum()` function for practice.
# Create a variable `round_sum` that is the `raw_sum` rounded to 1 decimal place.
# Use the `round()` function.
# Create two new variables `round_1` and `round_2` that are your `fav_1` and
# `fav_2` variables rounded to 1 decimal places
# Create a variable `sum_round` that is the sum of the rounded values
# Which is bigger, `round_sum` or `sum_round`? (You can use the `max()` function!)
# Exercise 1: calling built-in functions
# Create a variable `my_name` that contains your name
my_name <- "ana"
# Create a variable `name_length` that holds how many letters (including spaces)
# are in your name (use the `nchar()` function)
name_length <- nchar(my_name)
# Print the number of letters in your name
print(name_length)
# Create a variable `now_doing` that is your name followed by "is programming!"
# (use the `paste()` faunction)
now_doing <- paste(my_name,"is programming")
# Make the `now_doing` variable upper case
toupper(now_doing)
### Bonus
# Pick two of your favorite numbers (between 1 and 100) and assign them to
# variables `fav_1` and `fav_2`
fav_1 <- 69
fav_2 <- 23
# Divide each number by the square root of 201 and save the new value in the
# original variable
fav_1 < fav_1 / sqrt(201)
fav_2 <- fav_2 / sqrt(201)
# Create a variable `raw_sum` that is the sum of the two variables. Use the
# `sum()` function for practice.
# Create a variable `round_sum` that is the `raw_sum` rounded to 1 decimal place.
# Use the `round()` function.
# Create two new variables `round_1` and `round_2` that are your `fav_1` and
# `fav_2` variables rounded to 1 decimal places
# Create a variable `sum_round` that is the sum of the rounded values
# Which is bigger, `round_sum` or `sum_round`? (You can use the `max()` function!)
# Exercise 1: calling built-in functions
# Create a variable `my_name` that contains your name
my_name <- "ana"
# Create a variable `name_length` that holds how many letters (including spaces)
# are in your name (use the `nchar()` function)
name_length <- nchar(my_name)
# Print the number of letters in your name
print(name_length)
# Create a variable `now_doing` that is your name followed by "is programming!"
# (use the `paste()` faunction)
now_doing <- paste(my_name,"is programming")
# Make the `now_doing` variable upper case
toupper(now_doing)
### Bonus
# Pick two of your favorite numbers (between 1 and 100) and assign them to
# variables `fav_1` and `fav_2`
fav_1 <- 69
fav_2 <- 23
# Divide each number by the square root of 201 and save the new value in the
# original variable
fav_1 <- fav_1 / sqrt(201)
fav_2 <- fav_2 / sqrt(201)
# Create a variable `raw_sum` that is the sum of the two variables. Use the
# `sum()` function for practice.
# Create a variable `round_sum` that is the `raw_sum` rounded to 1 decimal place.
# Use the `round()` function.
# Create two new variables `round_1` and `round_2` that are your `fav_1` and
# `fav_2` variables rounded to 1 decimal places
# Create a variable `sum_round` that is the sum of the rounded values
# Which is bigger, `round_sum` or `sum_round`? (You can use the `max()` function!)
raw_sum = fav_1 + fav_2
# Use the `substr()` function to extract the 1st through 13th letters from the
# `lyric`, and store the result in a variable called `intro`
# Use `?substr` to see more about this function
substr(lyric,1,13)
# Exercise 2: using built-in string functions
# Create a variable `lyric` that contains the text "I like to eat apples and
# bananas"
lyric <- "I like to eat apples and bananas"
# Use the `substr()` function to extract the 1st through 13th letters from the
# `lyric`, and store the result in a variable called `intro`
# Use `?substr` to see more about this function
substr(lyric,1,13)
# Use the `substr()` function to extract the 15th through the last letter of the
# `lyric`, and store the result in a variable called `fruits`
# Hint: use `nchar()` to determine how many total letters there are!
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "ee".
# Store the result in a variable called `fruits_e`
# Hint: see http://www.endmemo.com/program/R/sub.php for a simpmle example (or
# use `?gsub`)
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "o".
# Store the result in a variable called `fruits_o`
# Create a new variable `lyric_e` that is the `intro` combined with the new
# `fruits_e` ending. Print out this variable
# Without making a new variable, print out the `intro` combined with the new
# `fruits_o` ending
# Use the `substr()` function to extract the 1st through 13th letters from the
# `lyric`, and store the result in a variable called `intro`
# Use `?substr` to see more about this function
intro <- (lyric,1,13)
# Exercise 2: using built-in string functions
# Create a variable `lyric` that contains the text "I like to eat apples and
# bananas"
lyric <- "I like to eat apples and bananas"
# Use the `substr()` function to extract the 1st through 13th letters from the
# `lyric`, and store the result in a variable called `intro`
# Use `?substr` to see more about this function
intro <- (lyric,1,13)
# Use the `substr()` function to extract the 15th through the last letter of the
# `lyric`, and store the result in a variable called `fruits`
# Hint: use `nchar()` to determine how many total letters there are!
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "ee".
# Store the result in a variable called `fruits_e`
# Hint: see http://www.endmemo.com/program/R/sub.php for a simpmle example (or
# use `?gsub`)
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "o".
# Store the result in a variable called `fruits_o`
# Create a new variable `lyric_e` that is the `intro` combined with the new
# `fruits_e` ending. Print out this variable
# Without making a new variable, print out the `intro` combined with the new
# `fruits_o` ending
# Exercise 2: using built-in string functions
# Create a variable `lyric` that contains the text "I like to eat apples and
# bananas"
lyric <- "I like to eat apples and bananas"
# Use the `substr()` function to extract the 1st through 13th letters from the
# `lyric`, and store the result in a variable called `intro`
# Use `?substr` to see more about this function
intro <- (lyric,1,13)
# Use the `substr()` function to extract the 15th through the last letter of the
# `lyric`, and store the result in a variable called `fruits`
# Hint: use `nchar()` to determine how many total letters there are!
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "ee".
# Store the result in a variable called `fruits_e`
# Hint: see http://www.endmemo.com/program/R/sub.php for a simpmle example (or
# use `?gsub`)
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "o".
# Store the result in a variable called `fruits_o`
# Create a new variable `lyric_e` that is the `intro` combined with the new
# `fruits_e` ending. Print out this variable
# Without making a new variable, print out the `intro` combined with the new
# `fruits_o` ending
# Use the `substr()` function to extract the 1st through 13th letters from the
# `lyric`, and store the result in a variable called `intro`
# Use `?substr` to see more about this function
intro <- (lyric,1,13)
# Use the `substr()` function to extract the 1st through 13th letters from the
# `lyric`, and store the result in a variable called `intro`
# Use `?substr` to see more about this function
intro <- substr(lyric,1,13)
substr(lyric,15,nchar(lyric))
substr(lyric,15,nchar(lyric))
fruits_e <- gsub(a,ee,fruits)
fruits_e <- gsub(a,ee,"fruits")
fruits_e <- gsub("a","ee","fruits")
fruits_e <- gsub("a","ee",fruits)
# Exercise 2: using built-in string functions
# Create a variable `lyric` that contains the text "I like to eat apples and
# bananas"
lyric <- "I like to eat apples and bananas"
# Use the `substr()` function to extract the 1st through 13th letters from the
# `lyric`, and store the result in a variable called `intro`
# Use `?substr` to see more about this function
intro <- substr(lyric,1,13)
# Use the `substr()` function to extract the 15th through the last letter of the
# `lyric`, and store the result in a variable called `fruits`
# Hint: use `nchar()` to determine how many total letters there are!
fruits <- substr(lyric,15,nchar(lyric))
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "ee".
# Store the result in a variable called `fruits_e`
# Hint: see http://www.endmemo.com/program/R/sub.php for a simpmle example (or
# use `?gsub`)
fruits_e <- gsub("a","ee",fruits)
# FRUITS DOESNT HAVE ANY A's IN IT
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "o".
# Store the result in a variable called `fruits_o`
# Create a new variable `lyric_e` that is the `intro` combined with the new
# `fruits_e` ending. Print out this variable
# Without making a new variable, print out the `intro` combined with the new
# `fruits_o` ending
fruits_e <- gsub("a","ee",fruits)
fruits_e <- gsub("a","ee",fruits)
fruits_o <- gsub("a","oo",fruits)
lyric_e <- paste(intro,lyrics_e)
# Exercise 2: using built-in string functions
# Create a variable `lyric` that contains the text "I like to eat apples and
# bananas"
lyric <- "I like to eat apples and bananas"
# Use the `substr()` function to extract the 1st through 13th letters from the
# `lyric`, and store the result in a variable called `intro`
# Use `?substr` to see more about this function
intro <- substr(lyric,1,13)
# Use the `substr()` function to extract the 15th through the last letter of the
# `lyric`, and store the result in a variable called `fruits`
# Hint: use `nchar()` to determine how many total letters there are!
fruits <- substr(lyric,15,nchar(lyric))
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "ee".
# Store the result in a variable called `fruits_e`
# Hint: see http://www.endmemo.com/program/R/sub.php for a simpmle example (or
# use `?gsub`)
fruits_e <- gsub("a","ee",fruits)
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "o".
# Store the result in a variable called `fruits_o`
fruits_o <- gsub("a","oo",fruits)
# Create a new variable `lyric_e` that is the `intro` combined with the new
# `fruits_e` ending. Print out this variable
lyric_e <- paste(intro,lyrics_e)
# Without making a new variable, print out the `intro` combined with the new
# `fruits_o` ending
# Exercise 2: using built-in string functions
# Create a variable `lyric` that contains the text "I like to eat apples and
# bananas"
lyric <- "I like to eat apples and bananas"
# Use the `substr()` function to extract the 1st through 13th letters from the
# `lyric`, and store the result in a variable called `intro`
# Use `?substr` to see more about this function
intro <- substr(lyric,1,13)
# Use the `substr()` function to extract the 15th through the last letter of the
# `lyric`, and store the result in a variable called `fruits`
# Hint: use `nchar()` to determine how many total letters there are!
fruits <- substr(lyric,15,nchar(lyric))
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "ee".
# Store the result in a variable called `fruits_e`
# Hint: see http://www.endmemo.com/program/R/sub.php for a simpmle example (or
# use `?gsub`)
fruits_e <- gsub("a","ee",fruits)
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "o".
# Store the result in a variable called `fruits_o`
fruits_o <- gsub("a","oo",fruits)
# Create a new variable `lyric_e` that is the `intro` combined with the new
# `fruits_e` ending. Print out this variable
lyric_e <- paste(intro,lyric_e)
# Without making a new variable, print out the `intro` combined with the new
# `fruits_o` ending
lyric_e <- paste(intro,lyric_e)
lyric_e <- paste(intro,fruits_e)
print lyric_e <- paste(intro,fruits_e)
lyric_e <- paste(intro,fruits_e)
print lyric_e
lyric_e <- paste(intro,fruits_e)
print(lyric_e )
lyric_e <- paste(intro,fruits_e)
print(lyric_e )
print(paste(intro,fruits_o))
